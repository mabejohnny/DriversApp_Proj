@model TruckDriverApp.Models.Facility

@{
    ViewData["Title"] = "ViewFacility";
}

<h1>ViewFacility</h1>

<div>
    <h4>Facility</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OvernightParking)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OvernightParking)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Latitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ParkingOptions)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ParkingOptions)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FoodDelivery)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FoodDelivery)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OtherOptions)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OtherOptions)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DriversLounge)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DriversLounge)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HasShowers)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HasShowers)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EntryTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EntryTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExitTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExitTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProfileId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProfileId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DriverId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DriverId)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Have any info to add about this facility?", "CommentReviewProfile", new { id = Model.Id })
</p>

<div id="map" style="position: fixed; overflow: visible; height: 400px; width: 400px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@TruckDriverApp.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>
    function initMap() {
       const map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.Latitude, lng: @Model.Longitude },
           zoom: 18,
           mapTypeId: "satellite",
       });
        map.setTilt(45);
    }
</script>

<div id="weather">
    <div id="description"></div>
    <h1 id="temp"></h1>
    <div id="location"></div>
</div>
<script>
    function weatherBalloon() {
        //var key = 'TruckDriverApp.APIKeys.WEATHER_API_KEY';
        fetch("https://api.openweathermap.org/data/2.5/weather?lat=@Model.Latitude&lon=@Model.Longitude&appid=@TruckDriverApp.APIKeys.WEATHER_API_KEY")  
        .then(function(resp) { return resp.json() }) // Convert data to json
        .then(function(data) {
            drawWeather(data);
    })
  .catch(function() {
   
  });
}

    window.onload = function() {
        weatherBalloon( 6167865 );
}
    function drawWeather( d ) {
	var celcius = Math.round(parseFloat(d.main.temp)-273.15);
	var fahrenheit = Math.round(((parseFloat(d.main.temp)-273.15)*1.8)+32); 
	
	document.getElementById('description').innerHTML = d.weather[0].description;
	document.getElementById('temp').innerHTML = celcius + '&deg;';
	document.getElementById('location').innerHTML = d.name;
}
    

</script>

<div>
    <a asp-action="Index">Back to List</a>
</div>

