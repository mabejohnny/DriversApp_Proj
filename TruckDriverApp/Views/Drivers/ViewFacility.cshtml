@model TruckDriverApp.Models.Facility

@{
    ViewData["Title"] = "ViewFacility";
}
<link rel="stylesheet" href="/css/LayoutBySection.css">
<h1 style="text-align: center; width: 500px; border: 1px solid black; border-bottom-color: transparent; padding: 50px; margin: 0 auto; background-color: white; box-shadow: 5px 5px 5px black;">
    Walmart Distribution Center # 529 

</h1>
<hr />
 &nbsp;&nbsp;
 &nbsp;&nbsp;
<p class="box">
    @Html.ActionLink("Have Something To Say? Comment Here!", "CommentReviewProfile", new { id = Model.Id })
</p>

 &nbsp;&nbsp;
 &nbsp;&nbsp;

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Address)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Address)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.City)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.City)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.State)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.State)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ZipCode)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ZipCode)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.PhoneNumber)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.PhoneNumber)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.OvernightParking)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.OvernightParking)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Notes)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Notes)
    </dd>

    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.ParkingOptions)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.ParkingOptions)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.FoodDelivery)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.FoodDelivery)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.OtherOptions)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.OtherOptions)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.DriversLounge)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.DriversLounge)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.HasShowers)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.HasShowers)
    </dd>

</dl>


<div id="weather">
    <div id="description"></div>
    <h1 id="temp"></h1>
    <div id="location"></div>
</div>
<script>
    function weatherBalloon() {
        //var key = 'TruckDriverApp.APIKeys.WEATHER_API_KEY';
        fetch("https://api.openweathermap.org/data/2.5/weather?lat=@Model.Latitude&lon=@Model.Longitude&appid=@TruckDriverApp.APIKeys.WEATHER_API_KEY")
        .then(function(resp) { return resp.json() }) // Convert data to json
        .then(function(data) {
            drawWeather(data);
    })
  .catch(function() {

  });
}

    window.onload = function() {
        weatherBalloon( 6167865 );
}
    function drawWeather( d ) {
	var celcius = Math.round(parseFloat(d.main.temp)-273.15);
	var fahrenheit = Math.round(((parseFloat(d.main.temp)-273.15)*1.8)+32);

	document.getElementById('description').innerHTML = d.weather[0].description;
	document.getElementById('temp').innerHTML = celcius + '&deg;';
	document.getElementById('location').innerHTML = d.name;
}


</script>


@*<p>
        @Html.ActionLink("Please check in", "CheckDriverIn", new { id = Model.Id })
    </p>
    <p>
        @Html.ActionLink("Have any info to add about this facility?", "CommentReviewProfile", new { id = Model.Id })
    </p>*@

 &nbsp;&nbsp;
 &nbsp;&nbsp;

<div id="map" style="position: fixed; overflow: visible; height: 600px; width: 600px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@TruckDriverApp.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>
    function initMap() {
       const map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.Latitude, lng: @Model.Longitude },
           zoom: 18,
           mapTypeId: "satellite",
       });
        map.setTilt(45);
    }
</script>

 &nbsp;&nbsp;
 &nbsp;&nbsp;

@*<div id="weather">
        <div id="description"></div>
        <h1 id="temp"></h1>
        <div id="location"></div>
    </div>
    <script>
        function weatherBalloon() {
            //var key = 'TruckDriverApp.APIKeys.WEATHER_API_KEY';
            fetch("https://api.openweathermap.org/data/2.5/weather?lat=@Model.Latitude&lon=@Model.Longitude&appid=@TruckDriverApp.APIKeys.WEATHER_API_KEY")
            .then(function(resp) { return resp.json() }) // Convert data to json
            .then(function(data) {
                drawWeather(data);
        })
      .catch(function() {

      });
    }

        window.onload = function() {
            weatherBalloon( 6167865 );
    }
        function drawWeather( d ) {
        var celcius = Math.round(parseFloat(d.main.temp)-273.15);
        var fahrenheit = Math.round(((parseFloat(d.main.temp)-273.15)*1.8)+32);

        document.getElementById('description').innerHTML = d.weather[0].description;
        document.getElementById('temp').innerHTML = celcius + '&deg;';
        document.getElementById('location').innerHTML = d.name;
    }


    </script>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    &nbsp;&nbsp;
    &nbsp;&nbsp;


    <div>
        <a asp-action="Index">Back to Main Menu</a>
    </div>

}
