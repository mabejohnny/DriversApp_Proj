@model IEnumerable<TruckDriverApp.Models.Facility>

@{
    ViewData["Title"] = "AllFacilitys";
}
<link rel="stylesheet" href="/css/LayoutBySection.css">
<h1 style="text-align: center; width: 500px; border: 1px solid black; border-bottom-color: transparent; padding: 50px; margin: 0 auto; background-color: white; box-shadow: 5px 5px 5px black;">
    Welcome to the Facility Locator!

</h1>
<body class="bodyDriverAllFacilitys">
</body>
<h1>Search Here</h1>

<form method="get" action="@Url.Action("SearchByZipCode", "Drivers")">
    <label for="search">Search Facility by Zipcode</label>
    <input type="text" name="search" id="search" />
    <button type="submit">Perform search</button>
</form>

<p>
    <a asp-action="AddNewFacility">Dont see your facility? Let us know!</a>
</p>
&nbsp;&nbsp;
&nbsp;&nbsp;
<div id="map" style="position: center; overflow: visible; height: 600px; width: 1200px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@TruckDriverApp.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>

    let myLats = [];
    let myLongs = [];
    let Ids = [];
</script>
@foreach (var item in Model)
{
    <script>
            myLats.push(@item.Latitude)
        myLongs.push(@item.Longitude)
        Ids.push(@item.Id)
    </script>
}

<script>

    let map;


    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.First().Latitude, lng: @Model.First().Longitude },
            zoom: 5,
        });


            for (let i = 0; i < myLats.length; i++) {
                new google.maps.Marker({
                    position: { lat: myLats[i], lng: myLongs[i] },
                    label: `${Ids[i]}`,
                    map: map,
            })
        }

    }
</script>
&nbsp;&nbsp;
&nbsp;&nbsp;
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OvernightParking)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParkingOptions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodDelivery)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DriversLounge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HasShowers)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OvernightParking)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ParkingOptions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FoodDelivery)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DriversLounge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HasShowers)
                </td>
                <td>
                    @*@Html.ActionLink("ViewFacility", "ViewFacility", new[] { item }) |*@
                    <a asp-action="ViewFacility" asp-route-id="@item.Id">View Facility</a>



                    @*@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                </td>
            </tr>
        }
    </tbody>
</table>
@*<div id="map" style="position: center; overflow: visible; height: 600px; width: 1200px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@TruckDriverApp.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>

    let myLats = [];
    let myLongs = [];
    let Ids = [];
</script>
@foreach (var item in Model)
{
    <script>
            myLats.push(@item.Latitude)
        myLongs.push(@item.Longitude)
        Ids.push(@item.Id)
    </script>
}

<script>

    let map;


    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.First().Latitude, lng: @Model.First().Longitude },
            zoom: 5,
        });


            for (let i = 0; i < myLats.length; i++) {
                new google.maps.Marker({
                    position: { lat: myLats[i], lng: myLongs[i] },
                    label: `${Ids[i]}`,
                    map: map,
            })
        }

    }
</script>*@

<div>
    <a asp-action="Index">Back to Main Menu</a>
</div>