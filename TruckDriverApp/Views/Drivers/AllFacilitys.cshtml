@model IEnumerable<TruckDriverApp.Models.Facility>

@{
    ViewData["Title"] = "AllFacilitys";
}

<h1>AllFacilitys</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OvernightParking)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Longitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParkingOptions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodDelivery)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OtherOptions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DriversLounge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HasShowers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EntryTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExitTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProfileId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DriverId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OvernightParking)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParkingOptions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FoodDelivery)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OtherOptions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DriversLounge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HasShowers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EntryTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExitTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProfileId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DriverId)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>
<div id="map" style="position: fixed; overflow: visible; height: 400px; width: 400px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@TruckDriverApp.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>

    let myLats = [];
    let myLongs = [];
    let Ids = [];
</script>
@foreach (var item in Model)
{
    <script>
            myLats.push(@item.Latitude)
        myLongs.push(@item.Longitude)
        Ids.push(@item.Id)
    </script>
}

<script>

    let map;


    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.First().Latitude, lng: @Model.First().Longitude },
            zoom: 10,
        });


            for (let i = 0; i < myLats.length; i++) {
                new google.maps.Marker({
                    position: { lat: myLats[i], lng: myLongs[i] },
                    label: `${Ids[i]}`,
                    map: map,
            })
        }

    }
</script>
